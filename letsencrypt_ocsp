#!/bin/bash -e

if [ $# -ne 3 ]; then
	echo "usage: $0 (check|update) letsencrypt_dir ocsp_der_out" >&2
	exit 1
fi

op="$1"
shift

cd "$1"
shift

ocsp_file="$1"
shift

get_next_update_time() {
	# -d- assummes 'now' if input is empty, -d$value does not and fails (as desired)
	date -d"$(openssl ocsp -respin "$1" -resp_text -noverify | sed -nE 's/^.*Next Update:\s*//p')" +%s
}

case "$op" in
update)
	uri="$(openssl x509 -ocsp_uri -in cert.pem -noout)"

	verify_opts=(-VAfile chain.pem)
	#verify_opts=(-noverify)

	openssl ocsp -issuer chain.pem -cert cert.pem -respout "$ocsp_file" "${verify_opts[@]}" -no_nonce -url "$uri" -header Host "$(sed -nE 's/^.*:\/\///p' <<< "$uri")" >/dev/null

	# example output:
	# Response verify OK
	# cert.pem: good
	#         This Update: Jun 10 23:00:00 2022 GMT
	#         Next Update: Jun 17 22:59:58 2022 GMT

	;&
check)
	if [ ! -f "$ocsp_file" ]; then
		exit 1
	fi

	resp_serial="$(openssl ocsp -respin "$ocsp_file" -resp_text -noverify | sed -nE 's/^.*Serial Number:\s*//p')"
	cert_serial="$(openssl x509 -serial -noout -in cert.pem | cut -f2 -d=)"

	if ! grep -q "$cert_serial" <<< "$resp_serial"; then
		echo "ocsp response for $resp_serial doesn't contain $cert_serial" >&2
		exit 1
	fi

	next_update="$(get_next_update_time "$ocsp_file")"
	if [ "$next_update" -lt "$(date +%s)" ]; then
		exit 1
	fi

	echo "$next_update"

	;;
*)
	echo "unknown op \"$op\"" >&2
	exit 1
esac
